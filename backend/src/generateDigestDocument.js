require('dotenv').config({ path: '.env' });
const mongoose = require('mongoose');
const { generateDailyDigest } = require('./services/digestService');
const fs = require('fs');
const path = require('path');

async function generateDigestDocument() {
  try {
    console.log('Connecting to MongoDB...');
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('Connected to MongoDB');

    console.log('Generating daily digest...');
    const digest = await generateDailyDigest();
    console.log();

    // Format the date
    const formattedDate = digest.date.toLocaleDateString('en-US', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });

    // Create the digest document
    const digestDocument = `
# AI Tools Daily Digest
## ${formattedDate}

### Overview
- Total AI Tools in Database: ${digest.totalTools}
- New Tools Added Today: ${digest.newTools}

### Summary
${digest.summary}

### Top GitHub Tools
${digest.topEntries.github.map((tool, index) => `
#### ${index + 1}. ${tool.name}
- **Description**: ${tool.description}
- **Stars**: ${tool.metrics.stars}
- **URL**: ${tool.url}
${tool.improvements ? `- **Suggested Improvements**: ${tool.improvements}` : ''}
`).join('\n')}

### Top HuggingFace Models
${digest.topEntries.huggingface.map((model, index) => `
#### ${index + 1}. ${model.name}
- **Description**: ${model.description}
- **Downloads**: ${model.metrics.downloads}
- **URL**: ${model.url}
${model.improvements ? `- **Suggested Improvements**: ${model.improvements}` : ''}
`).join('\n')}

### Top arXiv Papers
${digest.topEntries.arxiv.map((paper, index) => `
#### ${index + 1}. ${paper.name}
- **Description**: ${paper.description}
- **Citations**: ${paper.metrics.citations}
- **URL**: ${paper.url}
${paper.improvements ? `- **Suggested Improvements**: ${paper.improvements}` : ''}
`).join('\n')}

---
*This digest was automatically generated by the Arkaiv AI Tools Platform.*
`;

    // Create digests directory if it doesn't exist
    const digestsDir = path.join(__dirname, '..', 'digests');
    if (!fs.existsSync(digestsDir)) {
      fs.mkdirSync(digestsDir);
    }

    // Save the digest to a file
    const filename = `digest_${digest.date.toISOString().split('T')[0]}.md`;
    const filepath = path.join(digestsDir, filename);
    fs.writeFileSync(filepath, digestDocument);

    console.log(`\nDigest saved to: ${filepath}`);
    console.log('\nDigest Contents:');
    console.log(digestDocument);

  } catch (error) {
    console.error('Error:', error);
  } finally {
    await mongoose.connection.close();
    console.log('Disconnected from MongoDB');
  }
}

generateDigestDocument(); 